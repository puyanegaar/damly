@model PunasMarketing.ViewModels.InventoryChecking.TadilViewModel

@{
    int counter = 0;
}

<div class="modal-header bg-youtube">
    <button type="button" class="close" data-dismiss="modal">
        <span aria-hidden="true" style="color: white">×</span>
        <span class="sr-only">Close</span>
    </button>
    <h4 class="modal-title">
        @{
            var title = Model.Invoice.IsReceive ? "صدور رسید تعدیل" : "صدور حواله تعدیل";
        }
        @title
    </h4>
</div>

@using (Html.BeginForm("CreateTadilInvoiceModal", "InventoryChecking", FormMethod.Post, new { style = "padding: 10px" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.InventoryCheckingId)
    @Html.HiddenFor(model => model.Invoice.ThisWareHouseId)
    @Html.HiddenFor(model => model.InvoiceItemsJson)
    @Html.HiddenFor(model => model.InventoryCheckingItemId)
    @Html.HiddenFor(model => model.Invoice.IsReceive)

    <div class="col-xs-12 col-md-12">
        <div class="col-xs-12 col-md-12">
            <div class="md-form-group md-label-static">
                @Html.DisplayFor(model => model.WarehouseName, new { @class = "md-form-control" })
            </div>
        </div>

        <div id="kolDiv">
            <div class="col-xs-12 col-md-12">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.Invoice.Description, new { @class = "md-form-control" })
                    @Html.LabelFor(model => model.Invoice.Description, new { @class = "md-control-label" })
                </div>
            </div>
        </div>

        <div id="offeritemlist">
            <table id="tblItems" class="table table-bordered table-hover " cellspacing="0" width="100%">
                <thead>
                    <tr class="columnSize">
                        <th>
                            ردیف
                        </th>
                        <th>
                            نام کالا
                        </th>
                        <th>
                            مقدار
                        </th>
                        <th>
                            واحد اندازه گیری
                        </th>
                    </tr>
                </thead>
                <tbody id="tbodyItems">
                    <tr></tr>
                    @foreach (var item in Model.InvoiceItems)
                    {
                        <tr>
                            <td>
                                @(++counter)
                            </td>
                            <td>
                                @Model.ProductName
                            </td>
                            <td>
                                @item.MainUnitCount
                            </td>
                            <td>
                                @Model.UnitName
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div style="margin: 25px">
        @{
            string btnSubmitText = "تأیید و ثبت " + (Model.Invoice.IsReceive ? "رسید تعدیل" : "حواله تعدیل");
        }
        <input id="btnSubmit" class="btn btn-success" type="submit" value="@btnSubmitText" />
        <input class="btn btn-outline-danger" type="button" value="لغو" data-dismiss="modal" />
    </div>
}

@Scripts.Render("~/bundles/jqueryval")