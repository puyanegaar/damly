@using PunasMarketing.Models.DomainModel
@model PunasMarketing.ViewModels.Order.OrderDetailsViewModel
@{
    var order = Model.Order;
    int Row = 0;
    bool isVerified = Model.Order.IsVerified;
}

<div class="card-body">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Order.Id, new { id = "orderId" })

    <div class="col-xs-8 col-md-8">
        <label class="control-label">شرح: @order.Description</label>
    </div>
    <div class="col-xs-2 col-md-2">
        <label class="control-label">تاریخ: @order.CreatedDate.ToPersianDateTime().ToString("yyyy/MM/dd")</label>
    </div>

    <div class="col-xs-2 col-md-2">
        <label class="control-label">شماره سفارش: @order.Id</label>
    </div>
    <div class="col-xs-12 col-md-12" style="border-bottom: 1px solid #ddd; margin-top: 10px"></div>
    <div class="col-xs-12 col-md-12">
        <table id="OrderList" class="table table-striped table-bordered  dataTable" cellspacing="0" style="width: 100%">
            <thead>
            <tr class="columnSize">
                <th>
                    #
                </th>
                <th>
                    نام کالا
                </th>
                <th>
                    تعداد
                </th>
                <th>
                    واحد
                </th>
                <th>
                    موجودی قابل سفارش
                </th>
                <th>
                    قیمت واحد
                </th>
                <th>
                    تخفیف واحد
                </th>
                <th>
                    وضعیت کالا
                </th>
                <th>
                    قابل فروش
                </th>
                <th>
                    وضعیت دسترسی
                </th>
                <th>
                    توضیحات
                </th>
                <th>
                    حذف
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Items)
            {
                Product product = item.Product;
                double orderableCount = product.Inventory - product.PendingsCount;

                <tr class="columnSize">
                    <td>
                        @(++Row)
                    </td>
                    <td>
                        <a href="/Product/ProductManagement/@item.ProductId">@product.Name</a>
                    </td>
                    <td class="@(item.MainUnitCount <= 0 || orderableCount < item.MainUnitCount ? "wrongTd" : "")">
                        <input type="number" min="0" max="@orderableCount" key="@item.Id" value="@item.MainUnitCount" style="width: 60px" @(isVerified ? "readonly" : "") />
                    </td>
                    <td>
                        @product.Unit.Name
                    </td>
                    <td>
                        @(orderableCount.ToPrice())
                    </td>
                    <td>
                        @(item.UnitPrice.ToPrice())
                    </td>
                    <td>
                        @(item.UnitDiscount.ToPrice())
                    </td>
                    <td>
                        @Model.ProductionStatuses.FirstOrDefault(i => i.Key == product.ProductionStatus).Value
                    </td>
                    <td class="@(product.IsSellable ? "" : "wrongTd")">
                        @(product.IsSellable ? "است" : "نیست")
                    </td>
                    <td class="@(product.IsAvailable ? "" : "wrongTd")">
                        @(product.IsAvailable ? "فعال" : "غیرفعال")
                    </td>
                    <td>
                        @item.Description
                    </td>
                    <td>
                        @if (!Model.Order.IsVerified)
                        {
                            <a id="deleteOrderItem" value="@item.Id" class="icon icon-remove iconColor" style="cursor: pointer"></a>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    <div class="col-xs-12 col-md-12" style="margin-top: 20px">
        <div class="col-xs-12 col-md-12" style="float: right">
            @if (Model.Order.FactorId.HasValue)
            {
                <span style="color: green; font-size: 18px">
                    برای این سفارش،
                    <a onclick="ShowFactor(@Model.Order.FactorId, @Model.Order.PeriodId)" style="cursor: pointer">فاکتور به شماره @Model.Order.FactorId</a>
                    ثبت شده است.
                </span>
            }
            else
            {
                if (Model.Order.IsVerified)
                {
                    <input id='btnUnverify' class='btn btn-primary' type='button' value='عدم تأیید سفارش' />
                    <input id='btnFactor' class='btn btn-success' type='button' value='صدور فاکتور' />
                }
                else
                {
                    <input id='btnVerify' class='btn btn-success' type='button' value='تأیید سفارش' />
                }
            }

        </div>
    </div>
</div>


@Scripts.Render("~/bundles/datatable")
<script>
        orderDetails();
        DeleteOrderItem();
</script>