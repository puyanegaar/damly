@model PunasMarketing.ViewModels.Cheque.UpdateReceiveChequeViewModel
@{
    ViewBag.Title = "ویرایش چک دریافتی";
}


<div class="layout-content-body">
    @using (Html.BeginForm("UpdateRecieveCheque", "Cheque", FormMethod.Post))
    {
        <div id="divInfo">
            <legend>
                <h2>ویرایش چک دریافتی</h2>
            </legend>

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            @Html.HiddenFor(model => model.UpdateReceiveChequeMetaData.Id)
            @Html.HiddenFor(model => model.UpdateReceiveChequeMetaData.IsRecieve)
            @Html.HiddenFor(model => model.UpdateReceiveChequeMetaData.SubmitDate)
            @Html.HiddenFor(model => model.UpdateReceiveChequeMetaData.UserId)
            @Html.HiddenFor(model => model.UpdateReceiveChequeMetaData.ChequeStatus)
            @Html.HiddenFor(model => model.UpdateReceiveChequeMetaData.BankAccountId)
            @Html.HiddenFor(model => model.UpdateReceiveChequeMetaData.PayForSupCusId)
            @Html.HiddenFor(model => model.UpdateReceiveChequeMetaData.PayForCostId)

            <div class="col-xs-6 col-md-6">
                <div class="md-form-group md-label-floating">
                    @Html.TextBoxFor(model => model.UpdateReceiveChequeMetaData.ChequeNum, new { @class = "md-form-control", type = "text", spellcheck = "false" })
                    @Html.LabelFor(model => model.UpdateReceiveChequeMetaData.ChequeNum, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.UpdateReceiveChequeMetaData.ChequeNum)</span>
                </div>
            </div>

            <div class="col-xs-6 col-md-6">
                <div class="md-form-group md-label-floating">
                    @Html.DropDownListFor(model => model.UpdateReceiveChequeMetaData.BankId, new SelectList(Model.Banks, "Id", "Name"), "نام بانک", new { @class = "md-form-control" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.UpdateReceiveChequeMetaData.BankId)</span>
                </div>
            </div>

            <div class="col-xs-6 col-md-6">
                <div class="md-form-group md-label-floating">
                    @Html.TextBoxFor(model => model.UpdateReceiveChequeMetaData.Amount, new { @class = "md-form-control", type = "text", spellcheck = "false" })
                    @Html.LabelFor(model => model.UpdateReceiveChequeMetaData.Amount, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.UpdateReceiveChequeMetaData.Amount)</span>
                </div>
            </div>

            <div class="col-xs-6 col-md-6">
                <div class="md-form-group md-label-floating">
                    @Html.TextBoxFor(model => model.UpdateReceiveChequeMetaData.DueDate, new { @class = "md-form-control", type = "text", spellcheck = "false" })
                    @Html.LabelFor(model => model.UpdateReceiveChequeMetaData.DueDate, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.UpdateReceiveChequeMetaData.DueDate)</span>
                </div>
            </div>

            <div class="col-xs-6 col-md-6">
                <div class="md-form-group md-label-floating">
                    @Html.TextBoxFor(model => model.UpdateReceiveChequeMetaData.IssueDate, new { @class = "md-form-control", type = "text", spellcheck = "false" })
                    @Html.LabelFor(model => model.UpdateReceiveChequeMetaData.IssueDate, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.UpdateReceiveChequeMetaData.IssueDate)</span>
                </div>
            </div>

            <div class="col-xs-6 col-md-6">
                <div class="md-form-group md-label-floating">
                    @Html.TextBoxFor(model => model.UpdateReceiveChequeMetaData.OwnerName, new { @class = "md-form-control", type = "text", spellcheck = "false" })
                    @Html.LabelFor(model => model.UpdateReceiveChequeMetaData.OwnerName, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.UpdateReceiveChequeMetaData.OwnerName)</span>
                </div>
            </div>

            <div class="col-xs-6 col-md-6">
                <div class="md-form-group md-label-floating">
                    @Html.DropDownListFor(model => model.UpdateReceiveChequeMetaData.RecieveFromSupCusId, new SelectList(Model.Suppliers, "Id", "Name"), "دریافتی از تأمین کننده/مشتری", new { @class = "md-form-control" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.UpdateReceiveChequeMetaData.RecieveFromSupCusId)</span>
                </div>
            </div>

            <div class="col-xs-12 col-md-12">
                <div class="md-form-group md-label-floating">
                    @Html.TextBoxFor(model => model.UpdateReceiveChequeMetaData.Description, new { @class = "md-form-control", type = "text", spellcheck = "false" })
                    @Html.LabelFor(model => model.UpdateReceiveChequeMetaData.Description, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.UpdateReceiveChequeMetaData.Description)</span>
                </div>
            </div>

            <div class="col-xs-12 col-md-12">
                <div class="margin-top">
                    <div class="col-xs-12 col-md-12">
                        <input class="btn btn-success" type="submit" value="ثبت اطلاعات" />
                        <a href="@Url.Action("RecieveCheques","Cheque")" class="btn btn-default">بازگشت</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


@section toastr {
    @Html.Raw(TempData["UploadMessage"])
    @Html.Raw(TempData["deleteMessage"])
    @Html.Raw(TempData["SaveMessage"])
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}