@model PunasMarketing.ViewModels.Product.ProductViewModel


@{
    ViewBag.Title = "ویرایش کالا";
}

<div class="layout-content-body">
    <div id="divInfo">
        @using (Ajax.BeginForm("UpdateProduct", "Product", new AjaxOptions
        {
            OnSuccess = "createsuccess",
            HttpMethod = "Post",
            OnBegin = "start",
            OnComplete = "Complete"
        }, new { autocomplete = "off", enctype = "multipart/form-data", id = "UploadFrom" }))
        {
            <legend>
                <h2>ویرایش کالا</h2>
            </legend>
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(m => m.ProductModel.Id)


            <div class="col-xs-4 col-md-4">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.ProductModel.ProductCode, new { @class = "md-form-control", type = "text", spellcheck = "false" })
                    @Html.LabelFor(model => model.ProductModel.ProductCode, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.ProductCode)</span>
                </div>
            </div>

            <div class="col-xs-4 col-md-4">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.ProductModel.Name, new { @class = "md-form-control", type = "text", spellcheck = "false" })
                    @Html.LabelFor(model => model.ProductModel.Name, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.Name)</span>
                </div>
            </div>
            <div class="col-xs-4 col-md-4">
                <div class="md-form-group md-label-static">
                    @Html.DropDownListFor(model => model.ProductModel.ProductCategoryId, new SelectList(Model.ProductCategories, "Id", "Name"), "-", new { @class = "md-form-control" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.ProductCategoryId)</span>
                    <label class="md-control-label">@Html.LabelFor(model => model.ProductModel.ProductCategoryId, new { @class = "md-control-label" })</label>
                </div>
            </div>

            <div class="col-xs-4 col-md-4">
                <div class="md-form-group md-label-static">
                    @Html.DropDownListFor(model => model.ProductModel.MainUnitId, new SelectList(Model.Units.Where(i => i.IsMain), "Id", "Name"), "-", new { @class = "md-form-control" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.MainUnitId)</span>
                    <label class="md-control-label">@Html.LabelFor(model => model.ProductModel.MainUnitId, new { @class = "md-control-label" })</label>
                </div>
            </div>

            <div class="col-xs-4 col-md-4">
                <div class="md-form-group md-label-static">
                    @Html.DropDownListFor(model => model.ProductModel.SubUnitId, new SelectList(Model.Units.Where(i => !i.IsMain), "Id", "Name"), "-", new { @class = "md-form-control" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.SubUnitId)</span>
                    <label class="md-control-label">@Html.LabelFor(model => model.ProductModel.SubUnitId, new { @class = "md-control-label" })</label>
                </div>
            </div>

            <div class="col-xs-4 col-md-4">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.ProductModel.UnitRate, new { @class = "md-form-control", type = "number", spellcheck = "false" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.UnitRate)</span>
                    @Html.LabelFor(model => model.ProductModel.UnitRate, new { @class = "md-control-label" })
                </div>
            </div>
            <div class="col-xs-4 col-md-4">
                <div class="md-form-group md-label-static">
                    @Html.DropDownListFor(model => model.ProductModel.WarehouseId, new SelectList(Model.Warehouses, "Id", "Name"), "-", new { @class = "md-form-control" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.WarehouseId)</span>
                    <label class="md-control-label">@Html.LabelFor(model => model.ProductModel.WarehouseId, new { @class = "md-control-label" })</label>
                </div>
            </div>
            <div class="col-xs-4 col-md-4">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.ProductModel.OrderPoint, new { @class = "md-form-control", type = "number", spellcheck = "false" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.OrderPoint)</span>
                    @Html.LabelFor(model => model.ProductModel.OrderPoint, new { @class = "md-control-label" })
                </div>
            </div>

            <div class="col-xs-4 col-md-4">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.ProductModel.MarketerCommission, new { @class = "md-form-control", type = "number", spellcheck = "false" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.MarketerCommission)</span>
                    @Html.LabelFor(model => model.ProductModel.MarketerCommission, new { @class = "md-control-label" })
                </div>
            </div>

            <div class="col-xs-4 col-md-4">
                <div class="md-form-group md-label-static">
                    @Html.DropDownListFor(model => model.ProductModel.ProductionStatus, new SelectList(Model.ProductionStatuses, "Key", "Value"), "-", new { @class = "md-form-control" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.ProductionStatus)</span>
                    <label class="md-control-label">@Html.LabelFor(model => model.ProductModel.ProductionStatus, new { @class = "md-control-label" })</label>
                </div>
            </div>
            <div class="col-xs-4 col-md-4">
                <div class="col-xs-6 col-md-6">
                    <div class="md-form-group md-label-floating">
                        <label class="custom-control custom-control-primary custom-checkbox">
                            <input class="custom-control-input" data-val="true" id="ProductModel_IsSellable" name="ProductModel.IsSellable" type="checkbox" value="true" @if (Model.ProductModel.IsSellable) { <text> checked</text>}>

                            <span class="custom-control-indicator"></span>
                            <span class="custom-control-label">قابل فروش</span>
                        </label>
                    </div>
                </div>

                <div class="col-xs-6 col-md-6">
                    <div class="md-form-group md-label-floating">
                        <label class="custom-control custom-control-primary custom-checkbox">
                            <input class="custom-control-input" data-val="true" id="ProductModel_IsAvailable" name="ProductModel.IsAvailable" type="checkbox" value="true" @if (Model.ProductModel.IsAvailable) { <text> checked</text>}>

                            <span class="custom-control-indicator"></span>
                            <span class="custom-control-label">فعال است</span>
                        </label>
                    </div>
                </div>
            </div>

            <div class="col-xs-4 col-md-4" style="padding-right: 0px; padding-left: 0px">
                <div class="col-xs-7 col-md-7">
                    <div class="md-form-group md-label-static">
                        <input id="hiddenCatalogFileName" type="hidden" name="ProductModel.CatalogFileName" value="@Model.ProductModel.CatalogFileName" />
                        @{ 
                            string imageAddress = "";
                            string linkText = "-";

                            if (!string.IsNullOrWhiteSpace(Model.ProductModel.CatalogFileName))
                            {
                                imageAddress = "href=/Content/Upload/Image/Products/" + Model.ProductModel.CatalogFileName;
                                linkText = Model.ProductModel.CatalogFileName;
                            }
                        }
                        <a id="catalogFileName" class="md-form-control" style="overflow: hidden; white-space: nowrap" @imageAddress>
                            @linkText
                        </a>
                        <label class="md-control-label" for="catalogFileName">کاتالوگ</label>
                    </div>
                </div>
                <div class="col-xs-1 col-md-1" style="line-height: 60px; padding: 0px">
                    <a id="removeCatalog">حذف</a>
                </div>
                <div class="col-xs-4 col-md-4" style="margin-top:15px">
                    <div class="col-xs-10 col-md-10">
                        <input id="ImageFile" name="ImageFile" type="file" style="display:none" required="" />
                        <input id="ImageSelect" class="btn btn-info" type="button" value="انتخاب فایل" style="display:block ;margin:auto" />
                    </div>
                </div>
            </div>

            <div class="col-xs-12 col-md-12">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.ProductModel.Description, new { @class = "md-form-control", type = "text", spellcheck = "false" })
                    @Html.LabelFor(model => model.ProductModel.Description, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ProductModel.Description)</span>
                </div>
            </div>

            <div class="col-xs-12 col-md-12">
                <div class="margin-top">
                    <div class="col-xs-12 col-md-12">
                        <a href="@Url.Action("Products","Product")" class="btn btn-default">بازگشت به فهرست</a>
                        <input id="btnSubmit" class="btn btn-success" type="button" value="ثبت اطلاعات" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div id="divUploadPic" style="display:none">
        <legend>
            <h2>افزودن تصاویر</h2>
        </legend>
        <div class="col-xs-12 col-md-12">
            @using (Html.BeginForm("UploadImage", "Product", FormMethod.Post, new { id = "dropzoneForm", @class = "dropzone", enctype = "multipart/form-data" }))

            {
                <input type="hidden" id="ProductId" name="ProductId" value="@Model.ProductModel.Id" />
                <span class="whiteText">انتخاب تصاویر</span>
                <div class="dz-message" data-dz-message></div>
                <input type="hidden" id="imgCount" value="@Model.ProductModel.ProductImages.Count" />

            }
        </div>
        <div class="col-xs-12 col-md-12">
            <div class="margin-top">
                <div class="col-xs-6 col-md-6">
                    <a href="@Url.Action("Products","Product")" class="btn btn-default">بازگشت به لیست</a>
                </div>
                <div class="col-xs-6 col-md-6">
                    <input class="btn btn-success" type="submit" value="آپلود تصاویر" id="send" />
                </div>
            </div>
        </div>
    </div>
</div>

@section toastr {
    @Html.Raw(TempData["SaveMessage"])
}
@section styles{
    @Styles.Render("~/Content/dropzonescss")
}
@section scripts
{
    @Scripts.Render("~/bundles/dropzonescripts")
    @Scripts.Render("~/bundles/productsJs")
    <script>
        UpdateUploadImage();
        SelectCatalog();
    </script>

}
