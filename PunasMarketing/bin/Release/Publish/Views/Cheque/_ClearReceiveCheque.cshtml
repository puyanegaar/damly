@model PunasMarketing.ViewModels.Cheque.ClearReceiveChequeViewModel

<div class="modal-header bg-success">
    <button type="button" class="close" data-dismiss="modal">
        <span aria-hidden="true" style="color: white">×</span>
        <span class="sr-only">Close</span>
    </button>
    <h4 class="modal-title">وصول کردن چک دریافتی</h4>
</div>

@using (Html.BeginForm("ClearReceiveModal", "Cheque", FormMethod.Post, new { style = "padding: 10px;", id = "myForm" }))
{
    @Html.HiddenFor(model => model.ChequeId, new { id = "hiddenChequeId" })

    <div class="col-xs-12 col-md-12" style="margin-bottom: 10px">
        <label class="custom-control custom-control-success custom-radio">
            <input id="rbnCash" class="custom-control-input" type="radio" name="tranType" value="cash" checked="checked">
            <span class="custom-control-indicator"></span>
            <span class="custom-control-label">نقدی</span>
        </label>
        <label class="custom-control custom-control-success custom-radio">
            <input id="rbnAccount" class="custom-control-input" type="radio" name="tranType" value="account">
            <span class="custom-control-indicator"></span>
            <span class="custom-control-label">واریز به بانک</span>
        </label>
    </div>

    <div class="col-xs-12 col-md-12">
        <div class="md-form-group md-label-static">
            <input class="md-form-control" type="text" spellcheck="false" readonly="readonly" id="txtClearDate" value="@Model.ClearDate.ToMiladiDate().ToPersianDateTime().ToStringDate()" name="ClearDate" />
            @Html.LabelFor(model => model.ClearDate, new { @class = "md-control-label" })
            <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ClearDate)</span>
        </div>
    </div>

    <div id="accountDiv">
        <h5>شماره حساب جهت واریز چک را انتخاب کنید:</h5>
        <div class="md-form-group md-label-static">
            @Html.DropDownListFor(model =>
                model.BankAccountId,
                new SelectList(Model.BankAccounts, "Id", "BankNameAcc"),
                "-",
                new { @class = "md-form-control", id="drpAccount" })
            <span id="accountError" class="has-error md-help-block valError">حساب بانکی واریزی را انتخاب کنید</span>
        </div>
    </div>
    <div id="cashDiv">
        <h5>صندوق را انتخاب کنید:</h5>
        <div class="md-form-group md-label-static">
            @Html.DropDownListFor(model =>
                model.CashDeskId,
                new SelectList(Model.CashDesks, "Id", "Name"),
                "-",
                new { @class = "md-form-control", id="drpCashDesk" })
            <span id="cashDeskError" class="has-error md-help-block valError">صندوق را انتخاب کنید</span>
        </div>
    </div>

    <input id="btnSubmitClearReceiveCheque" class="btn btn-success btn-block btn-next" type="button" value="تأیید" />
}

@Scripts.Render("~/bundles/jqueryval")


@section styles{
    <link href="~/Scripts/PersianDateTimePicker/jquery-ui-datetimepicker.min.css" rel="stylesheet" />
}

@section toastr {
    <script src="~/Scripts/jquery-1.8.2.js"></script>
    <script src="~/Scripts/toastr.js"></script>

    @Html.Raw(TempData["SaveMessage"])
}


<script src="~/Scripts/PersianDateTimePicker/jquery-ui-datetimepicker.min.js"></script>

<script>
        $(document).ready(function () {
            var accountDiv = $('#accountDiv');
            var cashDiv = $('#cashDiv');
            var accountError = $('#accountError');
            var cashDeskError = $('#cashDeskError');
            var btnSubmitClearReceiveCheque = $('#btnSubmitClearReceiveCheque');

            accountError.show();
            cashDeskError.show();
            accountDiv.hide();
            cashDiv.show();

            $(document).on("change",
                "#drpAccount",
                function () {
                    var selectedOption = $("#drpAccount option:selected");

                    if (selectedOption.index() !== 0) {
                        accountError.hide();
                    } else {
                        accountError.show();
                    }
                });

            $(document).on("change",
                "#drpCashDesk",
                function () {
                    var selectedOption = $("#drpCashDesk option:selected");

                    if (selectedOption.index() !== 0) {
                        cashDeskError.hide();
                    } else {
                        cashDeskError.show();
                    }
                });

            $('input[type=radio][name=tranType]').change(function () {
                if (this.value === 'cash') {
                    accountDiv.hide();
                    cashDiv.show();
                } else if (this.value === 'account') {
                    accountDiv.show();
                    cashDiv.hide();
                }
            });

            $("#txtClearDate").datepicker({
                beforeShow: function (input, inst) {
                    var cal = inst.dpDiv;
                    var left = $(this).offset().left;
                    setTimeout(function () {
                        cal.css({
                            'left': left
                        });
                    },
                        10);
                },
                changeYear: true,
                yearRange: '1350:1420',
                changeMonth: true
            });

            btnSubmitClearReceiveCheque.click(function () {
                if ($('#myForm').valid()) {

                    if ($('#rbnCash').is(':checked')) {
                        if ( $("#drpCashDesk option:selected").index() == 0) {
                            return false;
                        }
                    } else if ($('#rbnAccount').is(':checked')) {
                        if ($("#drpAccount option:selected").index() == 0) {
                            return false;
                        }
                    }

                    var drpAccVal = $('#drpAccount').val();
                    var drpCashDeskVal = $('#drpCashDesk').val();
                    var txtClearDateVal = $('#txtClearDate').val();
                    var hiddenChequeIdVal = $('#hiddenChequeId').val();

                    $.ajax({
                        url: "/Cheque/ClearReceiveModalAjax",
                        data: {
                            ChequeId: hiddenChequeIdVal,
                            ClearDate: txtClearDateVal,
                            BankAccountId: drpAccVal,
                            CashDeskId: drpCashDeskVal
                    },
                        type: "POST",
                        dataType: "Json",
                        success: function(result) {
                            if (result.Success) {
                                var url = '@Url.Action("ChequeDetails", "Cheque", new {id = Model.ChequeId})';
                                window.location.href = url;
                            } else {
                                Toast("خطا در ثبت اطلاعات,info");
                            }
                        },
                        error: function() {
                        }
                    });
                }
            });
        })
</script>
