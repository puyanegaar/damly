@model PunasMarketing.ViewModels.InventoryChecking.InventoryCheckingViewModel
@{
    ViewBag.Title = "جزئیات انبارگردانی";
}

<div class="layout-content-body">
    @using (Html.BeginForm("AddInventoryChecking", "InventoryChecking", FormMethod.Post))
    {
        <div id="divInfo">
            <legend>
                <h2>جزئیات انبارگردانی</h2>
            </legend>
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            @Html.HiddenFor(model => model.InventoryChecking.Id, new { id = "txtInventoryCheckingId" })
            @Html.HiddenFor(model => model.InventoryChecking.CreatedByUserId, new { id = "txtCreatedByUserId" })


            <div class="col-xs-12 col-md-12">
                <div class="card" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 1px 2px 0 rgba(0, 0, 0, 0.19); border-radius: 5px;">
                    <div class="card-header">
                        <strong>اطلاعات انبارگردانی</strong>
                    </div>

                    <div class="card-body">
                        <div class="col-xs-3 col-md-3">
                            <div class="md-form-group md-label-static" , id="txtWarehouseId">
                                @Html.DisplayNameFor(model => model.InventoryChecking.Warehouse.Name):
                                @Html.DisplayFor(model => model.InventoryChecking.Warehouse.Name)
                            </div>
                        </div>

                        <div class="col-xs-3 col-md-3">
                            <div class="md-form-group md-label-static">
                                @Html.DisplayNameFor(model => model.InventoryChecking.Id):
                                @Html.DisplayFor(model => model.InventoryChecking.Id)
                            </div>
                        </div>

                        <div class="col-xs-3 col-md-3">
                            <div class="md-form-group md-label-static">
                                @Html.DisplayNameFor(model => model.InventoryChecking.CreatedDate):
                                @(Model.InventoryChecking.CreatedDate.ToStringShamsiDate())
                            </div>
                        </div>

                        <div class="col-xs-3 col-md-3">
                            <div class="md-form-group md-label-static">
                                @("کاربر ثبت کننده"):
                                @Html.DisplayFor(model => model.InventoryChecking.User.Username)
                            </div>
                        </div>

                        <div class="col-xs-12 col-md-12">
                            <div class="md-form-group md-label-static">
                                @Html.DisplayNameFor(model => model.InventoryChecking.Description):
                                @(Model.InventoryChecking.Description)
                            </div>
                        </div>


                    </div>
                </div>

                <div class="card" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 1px 2px 0 rgba(0, 0, 0, 0.19); border-radius: 5px;">
                    <div class="card-header">
                        <strong>لیست کالاهای شمارش شده</strong>
                    </div>

                    <div class="card-body">
                        <div class="col-xs-12 col-md-12">
                            <div id="offeritemlist">
                                <table id="tblItems" class="table table-bordered table-hover " cellspacing="0" width="100%">
                                    <thead>
                                        <tr class="columnSize">
                                            <th width="60px">
                                                ردیف
                                            </th>
                                            <th width="200px">
                                                نام کالا
                                            </th>
                                            <th width="100px">
                                                واحد اندازه گیری
                                            </th>
                                            <th width="100px">
                                                موجودی واقعی
                                            </th>
                                            <th width="100px">
                                                موجودی سیستم
                                            </th>
                                            <th width="100px">
                                                اختلاف موجودی
                                            </th>
                                            <th>
                                                شرح
                                            </th>
                                            <th width="150px">
                                                تعدیل موجودی
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbodyItems">
                                        <tr></tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-12 col-md-12">
                        <div class="margin-top">
                            <div class="col-xs-12 col-md-12">
                                <a href="@Url.Action("InventoryCheckings","InventoryChecking")" class="btn btn-default">بازگشت به فهرست</a>
                                @Html.ActionLink("ویرایش", "UpdateInventoryChecking", new { id = Model.InventoryChecking.Id }, new { @class = "btn btn-outline-success" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div id="modal" tabindex="-1" role="dialog" class="modal fade in" style="display: none;">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div id="modalBody" class="modal-body" style="padding: 0">

            </div>
        </div>
    </div>
</div>

@section styles{
    <link href="~/Scripts/PersianDateTimePicker/jquery-ui-datetimepicker.min.css" rel="stylesheet" />
}

@section toastr {
    <script src="~/Scripts/jquery-1.8.2.js"></script>
    <script src="~/Scripts/toastr.js"></script>

    @Html.Raw(TempData["SaveMessage"])
}

@section scripts{
    <script src="~/Scripts/PersianDateTimePicker/jquery-ui-datetimepicker.min.js"></script>

    <script>
        $(document).ready(function() {

            var index = 0;
            var inventoryCheckingItems = @Html.Raw(Json.Encode(Model.JsInventoryCheckingItemses));

            for (var i = 0; i < inventoryCheckingItems.length; i++) {
                var item = inventoryCheckingItems[i];

                index++;
                var btnTadilId = "btnTadil" + index;
                var btnTadil = "";

                if (item.IsCorrected) {
                    btnTadil = "<span class='badge badge-success'>تعدیل شده</span>";
                } else {
                    if (item.Difference != 0) {
                        var buttonText = "";

                        if (item.Difference > 0) {
                            buttonText = "صدور رسید تعدیل";
                        } else if (item.Difference < 0) {
                            buttonText = "صدور حواله تعدیل";
                        }

                        btnTadil = "<input type='button' class='btn btn-outline-info' id='" +
                            btnTadilId +
                            "' data-id='" +
                            index +
                            "' value='" +
                            buttonText +
                            "' />";
                    }
                }

                $('#tblItems tr:last').after('<tr class="columnSize"><td>' +
                    index +
                    '</td><td>' +
                    item.ProductName +
                    '</td><td>' +
                    item.MainUnit +
                    '</td><td>' +
                    item.RealMainUnitCount +
                    '</td><td>' +
                    item.SystemMainUnitCount +
                    '</td><td style="direction:ltr; text-align:right">' +
                    item.Difference +
                    '</td><td>' +
                    item.Description +
                    '</td><td>' +
                    btnTadil +
                    '</td></tr>');

                $('#' + btnTadilId).on('click',
                    { param: item },
                    function (event) {
                        var theItem = event.data.param;
                        var description = "";
                        description += theItem.Difference > 0 ? "حواله" : "رسید";
                        description += " تعدیل از بابت انبار گردانی شماره ";
                        description += @Model.InventoryChecking.Id;
                        description += " جهت به روزرسانی موجودی کالا";
                        $.ajax({
                            url: "/InventoryChecking/TadilModal",
                            data: {
                                InventoryCheckingId: @Model.InventoryChecking.Id,
                                InventoryCheckingItemId: theItem.InventoryCheckingItemId,
                                Invoice: {
                                    IsReceive: theItem.Difference > 0 ? true : false,
                                    ThisWareHouseId: @Model.InventoryChecking.WarehouseId,
                                    Description: description
                                },
                                InvoiceItems: [
                                    {
                                        ProductId: theItem.ProductId,
                                        MainUnitCount: Math.abs(theItem.Difference),
                                        SubUnitCount: 0,
                                        MainUnitName: theItem.MainUnit
                                    }
                                ],
                                WarehouseName: $('#txtWarehouseId').html(),
                                ProductName: theItem.ProductName,
                                UnitName: theItem.MainUnit
                            },
                            type: "Post",
                            dataType: "Json",
                            success: function(result) {
                                $("#modal").modal();
                                $("#modalBody").html(result.Html);
                            },
                            error: function () {
                                console.log('Ajax error');
                            }
                        });
                    });
            }
        });
    </script>
}