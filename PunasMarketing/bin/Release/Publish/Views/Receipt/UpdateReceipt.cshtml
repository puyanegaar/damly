@model PunasMarketing.ViewModels.Receipt.ReceiptViewModel
@{
    ViewBag.Title = "UpdateReceipt";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@using (Html.BeginForm("EditReceipt", "Receipt", FormMethod.Post, new { id = "ReceiptForm" }))
{
    <div class="col-xs-12 col-md-12" style="margin-top:20px">
        <div class="card">
            <div class="card-header">
                <div class="card-actions">

                </div>
                <strong>فیش</strong>
            </div>

            <div class="card-body">
                @Html.HiddenFor(model => model.receipt.Id)
                <div class="col-xs-2 col-md-2">
                    @{
                        List<SelectListItem> ReceiptType_Items = new List<SelectListItem>();
                        if (Model.receipt.IsReceive)
                        {
                            ReceiptType_Items.Add(new SelectListItem { Text = "دریافت", Value = "true" });
                        }
                        else
                        {
                            ReceiptType_Items.Add(new SelectListItem { Text = "پرداخت", Value = "false" });
                        }



                    }
                    <div class="md-form-group md-label-static">
                        @Html.DropDownListFor(model => model.receipt.IsReceive, ReceiptType_Items, new { @class = "md-form-control" })
                        @Html.LabelFor(mpdel => mpdel.receipt.IsReceive, new { @class = "md-control-label" })
                        <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.receipt.IsReceive)</span>
                    </div>
                </div>

                <div class="col-xs-2 col-md-2">
                    @{

                        List<SelectListItem> CounterPT_Items = new List<SelectListItem>();
                        CounterPT_Items.Add(new SelectListItem { Text = "حساب بانکی", Value = "1" });
                        CounterPT_Items.Add(new SelectListItem { Text = "هزینه ها", Value = "2" });
                        CounterPT_Items.Add(new SelectListItem { Text = "مشتری ها", Value = "3" });
                        CounterPT_Items.Add(new SelectListItem { Text = "تامین کننده", Value = "4" });
                        CounterPT_Items.Add(new SelectListItem { Text = "پرنسل", Value = "5" });
                        CounterPT_Items.Add(new SelectListItem { Text = "بازاریاب", Value = "6" });
                    }
                    <div class="md-form-group md-label-static">
                        @Html.DropDownListFor(model => model.receipt.CounterPartyType, CounterPT_Items, "انتخاب کنید", new { @class = "md-form-control" })
                        @Html.LabelFor(mpdel => mpdel.receipt.CounterPartyType, new { @class = "md-control-label" })
                        <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.receipt.CounterPartyType)</span>
                    </div>
                </div>

                <div class="col-xs-6 col-md-6">
                    <div class="md-form-group md-label-static">
                        @Html.HiddenFor(model => model.receipt.CounterPartyId)
                        <span style="top:auto;width:100%; text-align:left;position:absolute">
                            <a id="SelectCounterParty" class="icon icon-folder-open-o iconColor" style="cursor:pointer; text-align:left;text-decoration:none;cursor:pointer"></a>
                        </span>
                        @Html.TextBoxFor(model => model.CounterPartyText, new { @class = "md-form-control", spellcheck = "false", @readonly = "readonly" })
                        @Html.LabelFor(mpdel => mpdel.receipt.CounterPartyId, new { @class = "md-control-label" })
                        <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.receipt.CounterPartyId)</span>
                    </div>
                </div>

                <div class="col-xs-2 col-md-2">
                    <div class="md-form-group md-label-static">
                        <input class="md-form-control" , spellcheck="false" , readonly="readonly" value="@Model.receipt.CreateDate.ToPersianDateTime().ToString("yyyy/MM/dd")" />
                        <label class="md-control-label"> تاریخ فیش</label>
                    </div>
                </div>

                <div class="col-xs-12 col-md-12">
                    <div class="md-form-group md-label-static">
                        @Html.TextBoxFor(model => model.receipt.Description, new { @class = "md-form-control", spellcheck = "false" })
                        @Html.LabelFor(model => model.receipt.Description, new { @class = "md-control-label" })
                        <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.receipt.Description)</span>
                    </div>
                </div>
                <div class="col-xs-12 col-md-12">
                    <div class="margin-top">
                        <div class="col-xs-12 col-md-12">
                            <input id="EditReciept" class="btn btn-success" type="submit" value="ویرایش" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="col-xs-12 col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="card-actions">

            </div>
            <strong>نقدی</strong>
        </div>

        <div class="card-body" id="CashPart">
            @Html.HiddenFor(m => m.cash.id)
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.cash.Amount, new { @class = "md-form-control", spellcheck = "false" })
                    @Html.LabelFor(model => model.cash.Amount, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.cash.Amount)</span>
                </div>
            </div>
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.DropDownListFor(model => model.cash.CashDeskId, new SelectList(Model.CashDesks, "Id", "Name"), "انتخاب کنید", new { @class = "md-form-control" })
                    @Html.LabelFor(model => model.cash.CashDeskId, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.cash.CashDeskId)</span>
                </div>
            </div>
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBox("CashBalance", "", new { @class = "md-form-control", spellcheck = "false", @readonly = "readonly" })
                    <label class="md-control-label">موجودی صندوق</label>
                </div>
            </div>
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.cash.Description, new { @class = "md-form-control", spellcheck = "false" })
                    @Html.LabelFor(model => model.cash.Description, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.cash.Description)</span>
                </div>
            </div>

            <div class="col-xs-12 col-md-12">
                <div class="margin-top">
                    <div class="col-xs-12 col-md-12">
                        <input id="EditCash" class="btn btn-success" type="submit" value="ویرایش" />
                        <input id="DeleteCash" class="btn btn-warning" type="submit" value="حذف" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-xs-12 col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="card-actions">

            </div>
            <strong>کارت خوان</strong>
        </div>

        <div class="card-body" id="PosePart">
            @Html.HiddenFor(m => m.Pose.id)
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.Pose.Amount, new { @class = "md-form-control", spellcheck = "false" })
                    @Html.LabelFor(model => model.Pose.Amount, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.Pose.Amount)</span>
                </div>
            </div>
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.DropDownListFor(model => model.Pose.BankAccountId, new SelectList(Model.BankAccountPose, "AccountId", "BankName", Model.Pose.BankAccountId), "انتخاب کنید", new { @class = "md-form-control" })
                    @Html.LabelFor(mpdel => mpdel.Pose.BankAccountId, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.Pose.BankAccountId)</span>
                </div>
            </div>
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBox("PoseAccountNumber", "", new { @class = "md-form-control", spellcheck = "false" })
                    <label class="md-control-label">به نام</label>
                </div>
            </div>
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.Pose.IssueTracking, new { @class = "md-form-control", spellcheck = "false" })
                    @Html.LabelFor(model => model.Pose.IssueTracking, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.Pose.IssueTracking)</span>
                </div>
            </div>

            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.Pose.Commission, new { @class = "md-form-control", spellcheck = "false" })
                    @Html.LabelFor(model => model.Pose.Commission, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.Pose.Commission)</span>
                </div>
            </div>
            <div class="col-xs-9 col-md-9">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.Pose.Description, new { @class = "md-form-control", spellcheck = "false" })
                    @Html.LabelFor(model => model.Pose.Description, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.Pose.Description)</span>
                </div>
            </div>

            <div class="col-xs-12 col-md-12">
                <div class="margin-top">
                    <div class="col-xs-12 col-md-12">
                        <input id="EditPose" class="btn btn-success" type="submit" value="ویرایش" />
                        <input id="DeletePose" class="btn btn-warning" type="submit" value="حذف" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-xs-12 col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="card-actions">

            </div>
            <strong>کارت - واریز</strong>
        </div>

        <div class="card-body" id="CardPart">
            @Html.HiddenFor(m => m.Card.id)
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.Card.Amount, new { @class = "md-form-control", spellcheck = "false" })
                    @Html.LabelFor(model => model.Card.Amount, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.Card.Amount)</span>
                </div>
            </div>
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.DropDownListFor(model => model.Card.BankAccountId, new SelectList(Model.BankAccount, "AccountId", "BankName"), "انتخاب کنید", new { @class = "md-form-control" })
                    @Html.LabelFor(mpdel => mpdel.Card.BankAccountId, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.Card.BankAccountId)</span>
                </div>
            </div>
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBox("CardAccountNumber", "", new { @class = "md-form-control", spellcheck = "false" })
                    <label class="md-control-label">به نام</label>
                </div>
            </div>
            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.Card.IssueTracking, new { @class = "md-form-control", spellcheck = "false" })
                    @Html.LabelFor(model => model.Card.IssueTracking, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.Card.IssueTracking)</span>
                </div>
            </div>

            <div class="col-xs-3 col-md-3">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.Card.Commission, new { @class = "md-form-control", spellcheck = "false" })
                    @Html.LabelFor(model => model.Card.Commission, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.Card.Commission)</span>
                </div>
            </div>
            <div class="col-xs-9 col-md-9">
                <div class="md-form-group md-label-static">
                    @Html.TextBoxFor(model => model.Card.Description, new { @class = "md-form-control", spellcheck = "false" })
                    @Html.LabelFor(model => model.Card.Description, new { @class = "md-control-label" })
                    <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.Card.Description)</span>
                </div>
            </div>

            <div class="col-xs-12 col-md-12">
                <div class="margin-top">
                    <div class="col-xs-12 col-md-12">
                        <input id="EditCard" class="btn btn-success" type="submit" value="ویرایش" />
                        <input id="DeleteCard" class="btn btn-warning" type="submit" value="حذف" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-xs-12 col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="card-actions">

            </div>
            <strong>چک-چک های اشخاص</strong>
        </div>

        <div class="card-body" id="OthersChequePart">
            @using (Ajax.BeginForm("AddCheque", "Receipt", new AjaxOptions { OnSuccess = "AddChequeStatus", HttpMethod = "Post" }, new { id = "AddChequeForm" }))
            {
                @Html.HiddenFor(model => model.cheque.Amount)
                <input type="hidden" id="cheque_Id" name="cheque.Id" value="0" />
                <div class="col-xs-3 col-md-3">
                    <div class="md-form-group md-label-static">
                        @Html.TextBoxFor(model => model.cheque.ChequeNum, new { @class = "md-form-control", spellcheck = "false" })
                        @Html.LabelFor(mpdel => mpdel.cheque.ChequeNum, new { @class = "md-control-label" })
                        <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.cheque.ChequeNum)</span>
                    </div>
                </div>
                <div class="col-xs-3 col-md-3">
                    <div class="md-form-group md-label-static">
                        @Html.TextBoxFor(model => model.cheque.Price, new { @class = "md-form-control", spellcheck = "false" })
                        @Html.LabelFor(mpdel => mpdel.cheque.Price, new { @class = "md-control-label" })
                        <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.cheque.Price)</span>
                    </div>
                </div>
                <div class="col-xs-3 col-md-3">
                    <div class="md-form-group md-label-static">
                        @Html.TextBoxFor(model => model.cheque.DueDate, new { @class = "md-form-control", spellcheck = "false", @readonly = "readonly" })
                        @Html.LabelFor(mpdel => mpdel.cheque.DueDate, new { @class = "md-control-label" })
                        <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.cheque.DueDate)</span>
                    </div>
                </div>

                <div class="col-xs-3 col-md-3">
                    <div class="md-form-group md-label-static">
                        @Html.DropDownListFor(model => model.cheque.BankId, new SelectList(Model.BankName, "Id", "Name"), "انتخاب کنید", new { @class = "md-form-control" })
                        @Html.LabelFor(mpdel => mpdel.cheque.BankId, new { @class = "md-control-label" })
                        <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.cheque.BankId)</span>
                    </div>
                </div>

                <div class="col-xs-8 col-md-8">
                    <div class="md-form-group md-label-static">
                        @Html.TextBoxFor(model => model.cheque.Description, new { @class = "md-form-control", spellcheck = "false" })
                        @Html.LabelFor(mpdel => mpdel.cheque.Description, new { @class = "md-control-label" })
                        <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.cheque.Description)</span>
                    </div>
                </div>
                <div class="col-xs-4 col-md-4">
                    <div class="margin-top">
                        <div class="col-xs-12 col-md-12">
                            <input id="AddCheque" class="btn btn-success" type="submit" value="ثبت اطلاعات" style="margin-top:12px" />
                            <input id="EditOTCheque" class="btn btn-warning" type="submit" value="ویرایش چک" style="margin-top:12px;display:none" />
                            <input id="SelectOtherCheque" class="btn btn-info" type="submit" value="انتخاب چک" style="margin-top:12px" />
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-md-12" id="ChequeList">
                    <table id="OtherChequelistTable" class="table table-striped table-nowrap dataTable" cellspacing="0" width="100%">
                        <thead>
                            <tr class="columnSize">
                                <th>
                                    شماره چک
                                </th>
                                <th>
                                    تاریخ سررسید
                                </th>
                                <th>
                                    مبلغ
                                </th>
                                <th>
                                    بانک صادر کننده چک
                                </th>
                                <th>
                                    توضیحات
                                </th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.chequeList)
                            {
                                <tr class="columnSize">
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ChequeNum)
                                    </td>
                                    <td>
                                        @item.DueDate.ToPersianDateTime().ToString("yyyy/MM/dd")
                                    </td>
                                    <td>
                                        @item.Amount.ToPrice()
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Bank.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                    <td>
                                        <a id="SelectOtChequeItem" value="@item.Id" class="icon icon-pencil iconColor" style="text-decoration:none;cursor:pointer"></a>
                                        <a id="deleteOtChequeItem" value="@item.Id" class="icon icon-trash iconColor" style="text-decoration:none;cursor:pointer"></a>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            }
            <div class="col-xs-12 col-md-12">
                <div class="margin-top">
                    <div class="col-xs-12 col-md-12">
                        <input id="EditCard" class="btn btn-success" type="submit" value="ویرایش" />
                        <input id="DeleteCard" class="btn btn-warning" type="submit" value="حذف" />
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
@if (!Model.receipt.IsReceive)
{
    <div class="col-xs-12 col-md-12" id="IsOurcheckPart">
        <div class="card">
            <div class="card-header">
                <div class="card-actions">

                </div>
                <strong>چک-چک های خودمان</strong>
            </div>

            <div class="card-body" id="OurChequePart">
                @using (Ajax.BeginForm("AddOurCheque", "Receipt", new AjaxOptions { OnSuccess = "AddOurChequeStatus", HttpMethod = "Post" }, new { id = "AddOurChequeForm" }))
                {
                    @Html.HiddenFor(model => model.ourcheque.Amount)
                    <input type="hidden" id="ourcheque_Id" name="ourcheque.Id" value="0" />
                    <div class="col-xs-3 col-md-3">
                        <div class="md-form-group md-label-static">
                            @Html.DropDownListFor(model => model.ourcheque.ChequeAccountId, new SelectList(Model.BankAccount, "AccountId", "BankName"), "انتخاب کنید", new { @class = "md-form-control" })
                            @Html.LabelFor(mpdel => mpdel.ourcheque.ChequeAccountId, new { @class = "md-control-label" })
                            <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ourcheque.ChequeAccountId)</span>
                        </div>
                    </div>
                    <div class="col-xs-2 col-md-2">
                        <div class="md-form-group md-label-static">
                            @Html.TextBox("AccountNumber", "", new { @class = "md-form-control", spellcheck = "false", @readonly = "readonly" })
                            <label class="md-control-label">شماره حساب</label>
                        </div>
                    </div>
                    <div class="col-xs-2 col-md-2">
                        <div class="md-form-group md-label-static">
                            @Html.TextBox("AccountOwner", "", new { @class = "md-form-control", spellcheck = "false", @readonly = "readonly" })
                            <label class="md-control-label">به نام</label>
                        </div>
                    </div>

                    <div class="col-xs-5 col-md-5">
                        <div class="md-form-group md-label-static">
                            @Html.TextBoxFor(model => model.ourcheque.ChequeNum, new { @class = "md-form-control", spellcheck = "false" })
                            @Html.LabelFor(mpdel => mpdel.ourcheque.ChequeNum, new { @class = "md-control-label" })
                            <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ourcheque.ChequeNum)</span>
                        </div>
                    </div>

                    <div class="col-xs-3 col-md-3">
                        <div class="md-form-group md-label-static">
                            @Html.TextBoxFor(model => model.ourcheque.DueDate, new { @class = "md-form-control", spellcheck = "false", @readonly = "readonly" })
                            @Html.LabelFor(mpdel => mpdel.ourcheque.DueDate, new { @class = "md-control-label" })
                            <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ourcheque.DueDate)</span>
                        </div>
                    </div>
                    <div class="col-xs-3 col-md-3">
                        <div class="md-form-group md-label-static">
                            @Html.TextBoxFor(model => model.ourcheque.Price, new { @class = "md-form-control", spellcheck = "false" })
                            @Html.LabelFor(mpdel => mpdel.ourcheque.Price, new { @class = "md-control-label" })
                            <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.ourcheque.Price)</span>
                        </div>
                    </div>



                    <div class="col-xs-6 col-md-6">
                        <div class="md-form-group md-label-static">
                            @Html.TextBoxFor(model => model.ourcheque.Description, new { @class = "md-form-control", spellcheck = "false" })
                            @Html.LabelFor(mpdel => mpdel.ourcheque.Description, new { @class = "md-control-label" })
                            <span class="has-error md-help-block valError">@Html.ValidationMessageFor(model => model.cheque.Description)</span>
                        </div>
                    </div>
                    <div class="col-xs-12 col-md-12">
                        <div class="margin-top">
                            <div class="col-xs-12 col-md-12">
                                <input id="AddOurCheque" class="btn btn-success" type="submit" value="ثبت اطلاعات" style="margin-top:12px" />
                                <input id="EditOUcheque" class="btn btn-warning" type="submit" value="ویرایش چک" style="margin-top:12px;display:none" />
                                <input id="SelectOureCheque" class="btn btn-info" type="submit" value="انتخاب چک" style="margin-top:12px" />
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-md-12" id="ChequeList">
                        <table id="OurChequelistTable" class="table table-striped table-nowrap dataTable" cellspacing="0" width="100%">
                            <thead>
                                <tr class="columnSize">
                                    <th>
                                        شماره چک
                                    </th>
                                    <th>
                                        شماره حساب
                                    </th>
                                    <th>
                                        به نام
                                    </th>
                                    <th>
                                        تاریخ سررسید
                                    </th>
                                    <th>
                                        مبلغ
                                    </th>
                                    <th>
                                        بانک صادر کننده چک
                                    </th>
                                    <th>
                                        توضیحات
                                    </th>
                                    <th>عملیات</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.ourchequeList)
                                {
                                    <tr class="columnSize">
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ChequeNum)
                                        </td>

                                        <td>
                                            @item.BankAccount.AccountNum
                                        </td>

                                        <td>
                                            @item.BankAccount.Owner
                                        </td>

                                        <td>
                                            @item.DueDate.ToPersianDateTime().ToString("yyyy/MM/dd")
                                        </td>
                                        <td>
                                            @item.Amount.ToPrice()
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Bank.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>
                                        <td>
                                            <a id="SelectOuChequeItem" value="@item.Id" BankAccountId="@item.BankAccount.Id" class="icon icon-pencil iconColor" style="text-decoration:none;cursor:pointer"></a>
                                            <a id="deleteOuChequeItem" value="@item.Id" BankAccountId="@item.BankAccount.Id" class="icon icon-pencil iconColor" style="text-decoration:none;cursor:pointer"></a>
                                    </tr>
                                }
                            </tbody>
                        </table>

                    </div>
                }
            </div>
        </div>
    </div>
}

@section Modal{
    <div id="modalSelectCounterParty" tabindex="-1" role="dialog" class="modal fade">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-success">
                    <h4 class="modal-title">انتخاب طرف حساب</h4>
                </div>
                <div class="modal-body" id="CounterParty">
                </div>
            </div>
        </div>
    </div>

    <div id="modalChequeList" tabindex="-1" role="dialog" class="modal fade">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-success">
                    <h4 class="modal-title">لیست چک ها</h4>
                </div>
                <div class="modal-body" id="ChequeSelectList">

                </div>
            </div>
        </div>
    </div>
}

@section styles{
    <link href="~/Scripts/PersianDateTimePicker/jquery-ui-datetimepicker.min.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Scripts/PersianDateTimePicker/jquery-ui-datetimepicker.min.js"></script>
    <script>
        $(document).on("click", "#SelectCounterParty", function () {
            $("#modalSelectCounterParty").modal({ backdrop: true });
        });
        $(document).on("change", "#receipt_CounterPartyType", function () {
            $.ajax({
                url: "/Receipt/GetCounterParty",
                data: { type: $("#receipt_CounterPartyType").find(":selected").val() },
                type: "Post",
                dataType: "Json",
                success: function (result) {
                    if (result.Success) {
                        $("#CounterParty").html(result.Html);
                        var dataTable = $("#ItemTable").dataTable({
                            "bInfo": false,
                            "bLengthChange": false,
                            "bSort": false,
                            "language": {
                                "paginate": {
                                    "previous": "قبلی",
                                    "next": "بعدی"
                                }
                            },
                            "iDisplayLength": 20
                        });
                        $("#searchbox").keyup(function () {
                            dataTable.fnFilter(this.value);
                        });
                        $("#modalSelectCounterParty").modal({ backdrop: true });

                    }
                },
                error: function () {
                    alert("خطا!");
                }
            });
        });
    </script>
    <script>
        $(document).on("click", "#EditReciept", function (e) {
            e.preventDefault();
            swal({
                title: "آیا از ویرایش این بخش مطمئن هستید؟",
                icon: "warning",
                buttons: true,
                dangerMode: false,
                buttons: ['انصراف', 'ویرایش']
            })
                .then((isConfirm) => {
                    if (isConfirm) {
                        $.ajax({
                            url: "/Receipt/EditReceipt",
                            data: $("#ReceiptForm").serialize() ,
                            type: "Post",
                            dataType: "Json",
                            success: function (result) {
                                Toast(result.Script);
                            },
                            error: function () {
                                alert("خطا!");
                            }
                        });
                    }
                });
        });

    </script>
}