@using PunasMarketing.Models.DomainModel
@model PunasMarketing.ViewModels.Order.OrderDetailsViewModel
@{
    var order = Model.Order;
    int Row = 0;
}

<div class="card-body">
    @Html.AntiForgeryToken()
    <div class="col-xs-8 col-md-8">
        <label class="control-label">شرح: @order.Description</label>
    </div>
    <div class="col-xs-2 col-md-2">
        <label class="control-label">تاریخ: @order.CreatedDate.ToPersianDateTime().ToString("yyyy/MM/dd")</label>
    </div>

    <div class="col-xs-2 col-md-2">
        <label class="control-label">شماره سفارش: @order.Id</label>
    </div>
    <div class="col-xs-12 col-md-12" style="border-bottom: 1px solid #ddd; margin-top: 10px"></div>
    <div class="col-xs-12 col-md-12">
        <table id="OrderList" class="table table-striped table-bordered  dataTable" cellspacing="0" style="width: 100%">
            <thead>
                <tr class="columnSize">
                    <th>
                        #
                    </th>
                    <th>
                        نام کالا
                    </th>
                    <th>
                        تعداد
                    </th>
                    <th>
                        واحد
                    </th>
                    @*<th>
                            موجودی انبار
                        </th>
                        <th>
                            در انتظار حواله
                        </th>*@
                    <th>
                        موجودی قابل سفارش
                    </th>
                    <th>
                        وضعیت کالا
                    </th>
                    <th>
                        قابل فروش
                    </th>
                    <th>
                        وضعیت دسترسی
                    </th>
                    <th>
                        توضیحات
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    Product product = item.Product;
                    double orderableCount = product.Inventory - product.PendingsCount;

                    <tr class="columnSize">
                        <td>
                            @(++Row)
                        </td>
                        <td>
                            <a href="/Product/ProductManagement/@item.ProductId">@product.Name</a>
                        </td>
                        <td class="@(item.MainUnitCount <= 0 || orderableCount < item.MainUnitCount ? "wrongTd" : "")">
                            @item.MainUnitCount
                        </td>
                        <td>
                            @product.Unit.Name
                        </td>
                        @*<td class="@(product.Inventory > item.MainUnitCount ? "" : "wrongTd")">
                                @product.Inventory
                            </td>
                            <td class="@(product.PendingsCount < product.Inventory ? "" : "wrongTd")">
                                @product.PendingsCount
                            </td>*@
                        <td>
                            @(orderableCount)
                        </td>
                        <td>
                            @Model.ProductionStatuses.FirstOrDefault(i => i.Key == product.ProductionStatus).Value
                        </td>
                        <td class="@(product.IsSellable ? "" : "wrongTd")">
                            @(product.IsSellable ? "است" : "نیست")
                        </td>
                        <td class="@(product.IsAvailable ? "" : "wrongTd")">
                            @(product.IsAvailable ? "فعال" : "غیرفعال")
                        </td>
                        <td>
                            @item.Description
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="col-xs-12 col-md-12" style="margin-top: 20px">
        <div class="col-xs-12 col-md-12" style="float: right">
            @if (Model.Order.FactorId.HasValue)
            {
                <span style="color: green; font-size: 18px">
                    برای این سفارش،
                    <a onclick="ShowFactor(@Model.Order.FactorId, @Model.Order.PeriodId)" style="cursor: pointer">فاکتور به شماره @Model.Order.FactorId</a>
                    ثبت شده است.
                </span>
            }
            else
            {
                if (Model.Order.IsVerified)
                {
                    <input id='btnUnverify' class='btn btn-primary' type='button' value='عدم تأیید سفارش' />
                    <input id='btnFactor' class='btn btn-success' type='button' value='صدور فاکتور' />
                }
                else
                {
                    <input id='btnVerify' class='btn btn-success' type='button' value='تأیید سفارش' />
                }
                <span id="countError" hidden="hidden" style="color: red">در آیتم های سفارش کالا، مشکلی وجود دارد. تأیید سفارش امکان پذیر نیست.</span>
            }

        </div>
    </div>
</div>



<script>
    $(document).ready(function () {
        var btnVerify = $('#btnVerify');
        var theRedTr = $('.wrongTd').closest('tr');

        theRedTr.addClass('deleted');

        if (theRedTr.length > 0) {
            $('#countError').show();
            btnVerify.attr("disabled", true);
        }


        $('#btnFactor').click(function () {
            $.ajax({
                url: "/Factor/FactorForOrder/" + @Model.Order.Id,
                type: "Get",
                success: function (res) {
                    $('#orderModal').modal('toggle'); // close current order modal

                    $('#autoFactorModal').modal();
                    $('#autoFactorModalBody').html(res);
                }
            });
        });

       

        $('#btnVerify').click(function () {
            swal({
                    title: "آیا از تأیید این سفارش مطمئن هستید؟",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                    buttons: ['انصراف', 'تأیید']
                })
                .then((willDelete) => {
                    if (willDelete) {
                        var token = $("input[name = __RequestVerificationToken]").val();
                        $.post("/Order/Verify/" + @Model.Order.Id,
                            {
                                __RequestVerificationToken: token
                            },
                            function (result) {
                                if (result.Success) {
                                    swal("سفارش با موفقیت تأیید شد.",
                                        {
                                            icon: "success",
                                            button: "تایید"
                                        });

                                    $('#verifyStatus_@Model.Order.Id').html('<td id="verifyStatus_@Model.Order.Id" style="color: green">تأیید شده</td>');
                                    $('#orderModal').modal('toggle');

                                } else {
                                    swal("خطایی در انجام عملیات رخ داد . دوباره تلاش کنید.",
                                        {
                                            icon: "error",
                                            button: "تایید"
                                        });
                                }
                            });
                    }
                });
        });

        $('#btnUnverify').click(function () {
            swal({
                    title: "آیا از عدم تأیید این سفارش مطمئن هستید؟",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                    buttons: ['انصراف', 'تأیید']
                })
                .then((willDelete) => {
                    if (willDelete) {
                        var token = $("input[name = __RequestVerificationToken]").val();
                        $.post("/Order/Unverify/" + @Model.Order.Id,
                            {
                                __RequestVerificationToken: token
                            },
                            function (result) {
                                if (result.Success) {
                                    swal("عملیات با موفقیت انجام شد.",
                                        {
                                            icon: "success",
                                            button: "تایید"
                                        });

                                    $('#verifyStatus_@Model.Order.Id').html('<td id="verifyStatus_@Model.Order.Id" style="color: darkorange">تأیید نشده</td>');
                                    $('#orderModal').modal('toggle');

                                } else {
                                    swal("خطایی در انجام عملیات رخ داد . دوباره تلاش کنید.",
                                        {
                                            icon: "error",
                                            button: "تایید"
                                        });
                                }
                            });
                    }
                });
        });


        $('#btnDelete').click(function () {
            var id = $(this).attr('value');
            swal({
                    title: "آیا از حذف این سند مطمئن هستید؟",
                    text: "بعد از حذف، امکان بازیابی اطلاعات وجود ندارد!",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                    buttons: ['انصراف', 'حذف']
                })
                .then((willDelete) => {
                    if (willDelete) {
                        var token = $("input[name = __RequestVerificationToken]").val();
                        $.post("/Sanad/DeleteSanad/" + id,
                            {
                                __RequestVerificationToken: token
                            },
                            function (result) {
                                if (result.Success) {
                                    swal("عملیات با موفقیت انجام شد.",
                                        {
                                            icon: "success",
                                            button: "تایید"
                                        });
                                    window.location.href = '@Url.Action("Sanads", "Sanad")';

                                } else {
                                    swal("خطایی در انجام عملیات رخ داد . دوباره تلاش کنید.",
                                        {
                                            icon: "error",
                                            button: "تایید"
                                        });
                                }
                            });
                    }
                });
        });
    });
</script>