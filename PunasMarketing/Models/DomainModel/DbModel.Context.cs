//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PunasMarketing.Models.DomainModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class gsharing_DamliEntities : DbContext
    {
        public gsharing_DamliEntities()
            : base("name=gsharing_DamliEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Action> Actions { get; set; }
        public virtual DbSet<BankAccount> BankAccounts { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<CashDesk> CashDesks { get; set; }
        public virtual DbSet<ChequeBook> ChequeBooks { get; set; }
        public virtual DbSet<Cheque> Cheques { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<CostCategory> CostCategories { get; set; }
        public virtual DbSet<Cost> Costs { get; set; }
        public virtual DbSet<CounterParty> CounterParties { get; set; }
        public virtual DbSet<CustomerCategory> CustomerCategories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<FiscalPeriod> FiscalPeriods { get; set; }
        public virtual DbSet<InventoryCheckingItem> InventoryCheckingItems { get; set; }
        public virtual DbSet<InventoryChecking> InventoryCheckings { get; set; }
        public virtual DbSet<InvoiceItem> InvoiceItems { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<JobTitle> JobTitles { get; set; }
        public virtual DbSet<Offer> Offers { get; set; }
        public virtual DbSet<OtherTafsili> OtherTafsilis { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PayType> PayTypes { get; set; }
        public virtual DbSet<Personnel> Personnels { get; set; }
        public virtual DbSet<PriceType> PriceTypes { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductImage> ProductImages { get; set; }
        public virtual DbSet<ProductPriceList> ProductPriceLists { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<ReceiptItem> ReceiptItems { get; set; }
        public virtual DbSet<Receipt> Receipts { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<SanadItem> SanadItems { get; set; }
        public virtual DbSet<Sanad> Sanads { get; set; }
        public virtual DbSet<Sarfasl> Sarfasls { get; set; }
        public virtual DbSet<Section> Sections { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<Tafsili> Tafsilis { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<UserAccess> UserAccesses { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Warehouse> WareHouses { get; set; }
        public virtual DbSet<BankAccountView> BankAccountViews { get; set; }
        public virtual DbSet<OfferItem> OfferItems { get; set; }
        public virtual DbSet<MarketerRegion> MarketerRegions { get; set; }
        public virtual DbSet<View_Tafsili> View_Tafsili { get; set; }
        public virtual DbSet<Factor> Factors { get; set; }
        public virtual DbSet<OrderItem> OrderItems { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<FactorItem> FactorItems { get; set; }
    
        public virtual ObjectResult<string> GetChequeCounterPartyName(Nullable<int> cheque_id)
        {
            var cheque_idParameter = cheque_id.HasValue ?
                new ObjectParameter("cheque_id", cheque_id) :
                new ObjectParameter("cheque_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetChequeCounterPartyName", cheque_idParameter);
        }
    
        public virtual ObjectResult<GetPendingCheques_Result> GetPendingCheques(Nullable<bool> isReceive)
        {
            var isReceiveParameter = isReceive.HasValue ?
                new ObjectParameter("IsReceive", isReceive) :
                new ObjectParameter("IsReceive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPendingCheques_Result>("GetPendingCheques", isReceiveParameter);
        }
    
        public virtual ObjectResult<GetTafsiliForLedgerReport_Result> GetTafsiliForLedgerReport(Nullable<int> sarfaslId)
        {
            var sarfaslIdParameter = sarfaslId.HasValue ?
                new ObjectParameter("SarfaslId", sarfaslId) :
                new ObjectParameter("SarfaslId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTafsiliForLedgerReport_Result>("GetTafsiliForLedgerReport", sarfaslIdParameter);
        }
    
        public virtual ObjectResult<LedgerReportByKol_Result> LedgerReportByKol(Nullable<short> fiscal, Nullable<short> sarfaslKol, Nullable<int> page, Nullable<int> size, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, ObjectParameter totalCount)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var sarfaslKolParameter = sarfaslKol.HasValue ?
                new ObjectParameter("SarfaslKol", sarfaslKol) :
                new ObjectParameter("SarfaslKol", typeof(short));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LedgerReportByKol_Result>("LedgerReportByKol", fiscalParameter, sarfaslKolParameter, pageParameter, sizeParameter, fromDateParameter, toDateParameter, totalCount);
        }
    
        public virtual ObjectResult<LedgerReportBySarfasl_Result> LedgerReportBySarfasl(Nullable<short> fiscal, Nullable<short> sarfasl, Nullable<int> page, Nullable<int> size, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, ObjectParameter totalCount)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var sarfaslParameter = sarfasl.HasValue ?
                new ObjectParameter("Sarfasl", sarfasl) :
                new ObjectParameter("Sarfasl", typeof(short));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LedgerReportBySarfasl_Result>("LedgerReportBySarfasl", fiscalParameter, sarfaslParameter, pageParameter, sizeParameter, fromDateParameter, toDateParameter, totalCount);
        }
    
        public virtual ObjectResult<LedgerReportByTafsili_Result> LedgerReportByTafsili(Nullable<short> fiscal, Nullable<int> tafsili, Nullable<int> page, Nullable<int> size, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, ObjectParameter totalCount)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var tafsiliParameter = tafsili.HasValue ?
                new ObjectParameter("Tafsili", tafsili) :
                new ObjectParameter("Tafsili", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LedgerReportByTafsili_Result>("LedgerReportByTafsili", fiscalParameter, tafsiliParameter, pageParameter, sizeParameter, fromDateParameter, toDateParameter, totalCount);
        }
    
        public virtual int UpdateBankAccountTafsili(Nullable<short> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBankAccountTafsili", idParameter, nameParameter);
        }
    
        public virtual int UpdateCashDeskTafsili(Nullable<short> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCashDeskTafsili", idParameter, nameParameter);
        }
    
        public virtual int UpdateCustomerTafsili(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomerTafsili", idParameter, nameParameter);
        }
    
        public virtual int UpdateOtherTafsiliTafsili(Nullable<short> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOtherTafsiliTafsili", idParameter, nameParameter);
        }
    
        public virtual int UpdatePersonnelTafsili(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePersonnelTafsili", idParameter, nameParameter);
        }
    
        public virtual int UpdateProductTafsili(Nullable<short> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProductTafsili", idParameter, nameParameter);
        }
    
        public virtual int UpdateSupplierTafsili(Nullable<short> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSupplierTafsili", idParameter, nameParameter);
        }
    
        public virtual int GetMondehForLedger(Nullable<byte> type, Nullable<int> sarfaslId, Nullable<short> fiscal, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> tafsiliId, ObjectParameter totalBedeh, ObjectParameter totalBestan)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(byte));
    
            var sarfaslIdParameter = sarfaslId.HasValue ?
                new ObjectParameter("SarfaslId", sarfaslId) :
                new ObjectParameter("SarfaslId", typeof(int));
    
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var tafsiliIdParameter = tafsiliId.HasValue ?
                new ObjectParameter("TafsiliId", tafsiliId) :
                new ObjectParameter("TafsiliId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMondehForLedger", typeParameter, sarfaslIdParameter, fiscalParameter, startDateParameter, endDateParameter, tafsiliIdParameter, totalBedeh, totalBestan);
        }
    
        public virtual ObjectResult<GetLedgerReport_Result> GetLedgerReport(Nullable<byte> type, Nullable<int> sarfaslId, Nullable<short> fiscal, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> tafsiliId)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(byte));
    
            var sarfaslIdParameter = sarfaslId.HasValue ?
                new ObjectParameter("SarfaslId", sarfaslId) :
                new ObjectParameter("SarfaslId", typeof(int));
    
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var tafsiliIdParameter = tafsiliId.HasValue ?
                new ObjectParameter("TafsiliId", tafsiliId) :
                new ObjectParameter("TafsiliId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLedgerReport_Result>("GetLedgerReport", typeParameter, sarfaslIdParameter, fiscalParameter, startDateParameter, endDateParameter, tafsiliIdParameter);
        }
    
        public virtual ObjectResult<SanadDetail_Result> SanadDetail(Nullable<short> fiscal, Nullable<int> sanadId)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var sanadIdParameter = sanadId.HasValue ?
                new ObjectParameter("SanadId", sanadId) :
                new ObjectParameter("SanadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SanadDetail_Result>("SanadDetail", fiscalParameter, sanadIdParameter);
        }
    
        public virtual ObjectResult<journalReport_Result> journalReport(Nullable<short> fiscal, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<journalReport_Result>("journalReport", fiscalParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<journalTotalAccountsReport__Result> journalTotalAccountsReport_(Nullable<short> fiscal, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<journalTotalAccountsReport__Result>("journalTotalAccountsReport_", fiscalParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GetTotalResultByTafsili(Nullable<short> fiscal, Nullable<int> tafsili, ObjectParameter totalBed, ObjectParameter totalBes)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var tafsiliParameter = tafsili.HasValue ?
                new ObjectParameter("Tafsili", tafsili) :
                new ObjectParameter("Tafsili", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetTotalResultByTafsili", fiscalParameter, tafsiliParameter, totalBed, totalBes);
        }
    
        public virtual int GetTotalResultBySarfasl(Nullable<short> fiscal, Nullable<short> sarfasl, ObjectParameter totalBed, ObjectParameter totalBes)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var sarfaslParameter = sarfasl.HasValue ?
                new ObjectParameter("Sarfasl", sarfasl) :
                new ObjectParameter("Sarfasl", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetTotalResultBySarfasl", fiscalParameter, sarfaslParameter, totalBed, totalBes);
        }
    
        public virtual ObjectResult<GetOtherDaraei_Result> GetOtherDaraei()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOtherDaraei_Result>("GetOtherDaraei");
        }
    
        public virtual ObjectResult<GetOtherBedhi_Result> GetOtherBedhi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOtherBedhi_Result>("GetOtherBedhi");
        }
    
        public virtual int sp_Backup_Database(string dBName, string location, ObjectParameter backupName)
        {
            var dBNameParameter = dBName != null ?
                new ObjectParameter("DBName", dBName) :
                new ObjectParameter("DBName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Backup_Database", dBNameParameter, locationParameter, backupName);
        }
    
        public virtual int sp_Backup_Database1(string dBName, string location, string backupName)
        {
            var dBNameParameter = dBName != null ?
                new ObjectParameter("DBName", dBName) :
                new ObjectParameter("DBName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var backupNameParameter = backupName != null ?
                new ObjectParameter("BackupName", backupName) :
                new ObjectParameter("BackupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Backup_Database1", dBNameParameter, locationParameter, backupNameParameter);
        }
    
        public virtual int backupDatabase(string databaseName, string backupDirectory)
        {
            var databaseNameParameter = databaseName != null ?
                new ObjectParameter("databaseName", databaseName) :
                new ObjectParameter("databaseName", typeof(string));
    
            var backupDirectoryParameter = backupDirectory != null ?
                new ObjectParameter("backupDirectory", backupDirectory) :
                new ObjectParameter("backupDirectory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("backupDatabase", databaseNameParameter, backupDirectoryParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateSarfasl(Nullable<int> id, string name, string coding)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var codingParameter = coding != null ?
                new ObjectParameter("Coding", coding) :
                new ObjectParameter("Coding", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSarfasl", idParameter, nameParameter, codingParameter);
        }
    
        public virtual int sp_Backup_Database2(string dBName, string location, string backupName)
        {
            var dBNameParameter = dBName != null ?
                new ObjectParameter("DBName", dBName) :
                new ObjectParameter("DBName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var backupNameParameter = backupName != null ?
                new ObjectParameter("BackupName", backupName) :
                new ObjectParameter("BackupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Backup_Database2", dBNameParameter, locationParameter, backupNameParameter);
        }
    
        public virtual ObjectResult<CustomerlReport_Result> CustomerlReport(Nullable<short> fiscal, Nullable<int> customerId)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerlReport_Result>("CustomerlReport", fiscalParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<PersonnelReport_Result> PersonnelReport(Nullable<short> fiscal, Nullable<int> personnelId)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var personnelIdParameter = personnelId.HasValue ?
                new ObjectParameter("PersonnelId", personnelId) :
                new ObjectParameter("PersonnelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersonnelReport_Result>("PersonnelReport", fiscalParameter, personnelIdParameter);
        }
    
        public virtual ObjectResult<SupplierReport_Result> SupplierReport(Nullable<short> fiscal, Nullable<int> supplierId)
        {
            var fiscalParameter = fiscal.HasValue ?
                new ObjectParameter("Fiscal", fiscal) :
                new ObjectParameter("Fiscal", typeof(short));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SupplierReport_Result>("SupplierReport", fiscalParameter, supplierIdParameter);
        }
    
        public virtual int sp_products_with_discount(Nullable<short> customerCategory)
        {
            var customerCategoryParameter = customerCategory.HasValue ?
                new ObjectParameter("customerCategory", customerCategory) :
                new ObjectParameter("customerCategory", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_products_with_discount", customerCategoryParameter);
        }
    
        public virtual int sp_products_with_discount_foreach(Nullable<int> customerId, Nullable<short> lastId, Nullable<int> count, Nullable<short> productId, Nullable<short> inputProductCategoryId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("lastId", lastId) :
                new ObjectParameter("lastId", typeof(short));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(short));
    
            var inputProductCategoryIdParameter = inputProductCategoryId.HasValue ?
                new ObjectParameter("inputProductCategoryId", inputProductCategoryId) :
                new ObjectParameter("inputProductCategoryId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_products_with_discount_foreach", customerIdParameter, lastIdParameter, countParameter, productIdParameter, inputProductCategoryIdParameter);
        }
    
        public virtual int sp_products_with_discount_foreach1(Nullable<int> customerId, Nullable<short> lastId, Nullable<int> count, Nullable<short> productId, Nullable<short> inputProductCategoryId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("lastId", lastId) :
                new ObjectParameter("lastId", typeof(short));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(short));
    
            var inputProductCategoryIdParameter = inputProductCategoryId.HasValue ?
                new ObjectParameter("inputProductCategoryId", inputProductCategoryId) :
                new ObjectParameter("inputProductCategoryId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_products_with_discount_foreach1", customerIdParameter, lastIdParameter, countParameter, productIdParameter, inputProductCategoryIdParameter);
        }
    
        public virtual int sp_products_with_discount_foreach2(Nullable<int> customerId, Nullable<short> lastId, Nullable<int> count, Nullable<short> productId, Nullable<short> inputProductCategoryId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("lastId", lastId) :
                new ObjectParameter("lastId", typeof(short));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(short));
    
            var inputProductCategoryIdParameter = inputProductCategoryId.HasValue ?
                new ObjectParameter("inputProductCategoryId", inputProductCategoryId) :
                new ObjectParameter("inputProductCategoryId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_products_with_discount_foreach2", customerIdParameter, lastIdParameter, countParameter, productIdParameter, inputProductCategoryIdParameter);
        }
    
        public virtual ObjectResult<sp_products_with_discount_foreach3_Result> sp_products_with_discount_foreach3(Nullable<int> customerId, Nullable<short> lastId, Nullable<int> count, Nullable<short> productId, Nullable<short> inputProductCategoryId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("lastId", lastId) :
                new ObjectParameter("lastId", typeof(short));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(short));
    
            var inputProductCategoryIdParameter = inputProductCategoryId.HasValue ?
                new ObjectParameter("inputProductCategoryId", inputProductCategoryId) :
                new ObjectParameter("inputProductCategoryId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_products_with_discount_foreach3_Result>("sp_products_with_discount_foreach3", customerIdParameter, lastIdParameter, countParameter, productIdParameter, inputProductCategoryIdParameter);
        }
    }
}
